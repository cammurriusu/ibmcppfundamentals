        -:    0:Source:/home/riccardo/Documents/IBM Fundamentals C++/Module 6/OnlineTest/main.cpp
        -:    0:Graph:/home/riccardo/Documents/IBM Fundamentals C++/Module 6/OnlineTest/cmake-build-debug-coverage/CMakeFiles/OnlineTest.dir/main.cpp.gcno
        -:    0:Data:/home/riccardo/Documents/IBM Fundamentals C++/Module 6/OnlineTest/cmake-build-debug-coverage/CMakeFiles/OnlineTest.dir/main.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <iostream>
        -:    2:using namespace std;
        -:    3:
        -:    4:struct Employee {
        -:    5:    string name;
        -:    6:    int scores[1];
        -:    7:};
        -:    8:
function main called 1 returned 100% blocks executed 76%
        1:    9:int main() {
       21:   10:    Employee employee[10];
        1:   10-block  0
       10:   10-block  1
call    0 returned 10
       11:   10-block  2
branch  1 taken 10
branch  2 taken 1 (fallthrough)
       10:   10-block  3
call    3 returned 10
    $$$$$:   10-block  4
    $$$$$:   10-block  5
call    4 never executed
        1:   11:    int n, avg[10]{}, winners[10]{}, l = 0;
        1:   12:    bool x = false;
        -:   13:
        1:   14:    cin >> n;
        1:   14-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        3:   15:    for (int i = 0; i < n; i++) {
        1:   15-block  0
        2:   15-block  1
        3:   15-block  2
branch  0 taken 2
branch  1 taken 1 (fallthrough)
        2:   16:        cin >> employee[i].name;
        2:   16-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        4:   17:        for (int &score : employee[i].scores) {
        2:   17-block  0
        2:   17-block  1
        4:   17-block  2
branch  0 taken 2
branch  1 taken 2 (fallthrough)
        2:   18:            cin >> score;
        2:   18-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        -:   19:        }
        -:   20:    }
        -:   21:
        1:   22:    if (n == 1) {
        1:   22-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:   23:        cout << "Only one person has taken up the test";
    %%%%%:   23-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   24:    } else {
        3:   25:        for (int i = 0; i < n; i++) {
        1:   25-block  0
        3:   25-block  1
branch  0 taken 2
branch  1 taken 1 (fallthrough)
        4:   26:            for (int &score : employee[i].scores) {
        2:   26-block  0
        4:   26-block  1
branch  0 taken 2
branch  1 taken 2 (fallthrough)
        2:   27:                avg[i] += score;
        2:   27-block  0
        -:   28:            }
        2:   29:            avg[i] /= 5;
        2:   29-block  0
        -:   30:        }
        -:   31:
        3:   32:        for (int i = 0; i < n; i++) {
        1:   32-block  0
        2:   32-block  1
        3:   32-block  2
branch  0 taken 2
branch  1 taken 1 (fallthrough)
        2:   33:            if (avg[0] < avg[i]) {
        2:   33-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 2
    #####:   34:                winners[0] = i;
    #####:   35:                l++;
    %%%%%:   35-block  0
        -:   36:            }
        -:   37:            /*else if (avg[0] == avg [i]) {
        -:   38:                k[0] = i;
        -:   39:                k[i] = i;
        -:   40:                x = true;
        -:   41:            }*/
        -:   42:        }
        -:   43:
        1:   44:        cout << "The list of Employees who have scored highest marks" << endl;
        1:   44-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   44-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   45:        cout << l;
        1:   45-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   46:        for (int i = 0; i < l; i++) {
        1:   46-block  0
    %%%%%:   46-block  1
        1:   46-block  2
branch  0 taken 0
branch  1 taken 1 (fallthrough)
    #####:   47:            cout << employee[winners[i]].name << endl;
    %%%%%:   47-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   47-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:   48:        }
        -:   49:    }
        -:   50:
        1:   51:    return 0;
        1:   51-block  0
       11:   52:}
       11:   52-block  0
branch  0 taken 10 (fallthrough)
branch  1 taken 1
    $$$$$:   52-block  1
branch  2 never executed
branch  3 never executed
